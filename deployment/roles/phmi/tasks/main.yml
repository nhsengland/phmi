---
# set up the PHMI project itself
- name: Creates project dir
  become: true
  file:
    path: "{{ PROJECT_PATH }}"
    state: directory
    mode: 0777

- name: Setup the Git repo
  git: repo={{ GIT_REPO }}
       version={{ GIT_BRANCH }}
       dest={{ PROJECT_PATH }}
       accept_hostkey=yes
       force=yes

- name: Creates log dir
  file:
    path: "{{ LOG_DIR }}"
    state: directory

- name: Creates config dir
  file:
    path: "{{ PROJECT_PATH }}/vars"
    state: directory

# otherwise it complains silently and
# blows up the world
- name: Creates gunicorn log
  file:
    path: "{{ LOG_DIR }}/gunicorn.log"
    state: touch

- name: Create configs
  template:
    src: "templates/{{ item }}.jinja2"
    dest: "{{ PROJECT_PATH }}/vars/{{ item }}"
    mode: 0744
    owner: ubuntu
  with_items:
    - gunicorn.conf
    - gunicorn_conf.py
    - nginx_site.conf

- name: Create local settings
  template:
    src: "templates/local_settings.py.jinja2"
    dest: "{{ PROJECT_PATH }}/{{ PROJECT_NAME }}/local_settings.py"
    mode: 0744
    owner: ubuntu

- name: Install python dependencies
  args:
    chdir: "{{ PROJECT_PATH}}"
  command: "pipenv install"

- name: Run Django database migrations
  args:
    chdir: "{{ PROJECT_PATH}}"
  command: "pipenv run python manage.py migrate"

- name: Run Django collectstatic
  args:
    chdir: "{{ PROJECT_PATH}}"
  command: "pipenv run python manage.py collectstatic --noinput"

- name: Run Django initial_load
  args:
    chdir: "{{ PROJECT_PATH}}"
  command: "pipenv run python manage.py loaddata data/db-dump.json"

- name: Remove old nginx default
  become: true
  file:
    state: absent
    path: "/etc/nginx/sites-available/default"

- name: Symlink nginx
  become: true
  file:
    src: "{{ PROJECT_PATH }}/vars/nginx_site.conf"
    dest: "/etc/nginx/sites-available/default"
    owner: root
    group: root
    state: link

- name: Restart nginx
  become: true
  service:
    name: nginx
    state: restarted
    enabled: yes

- name: Kill gunicorn
  sudo: yes
  command: "pkill gunicorn"
  ignore_errors: True

- name: Create circus config
  become: yes
  template:
    src: "templates/circus.ini.jinja2"
    dest: "/etc/circus/circusd.ini"

- name: Restart circus
  become: yes
  command: "circusctl restart"
  ignore_errors: True
